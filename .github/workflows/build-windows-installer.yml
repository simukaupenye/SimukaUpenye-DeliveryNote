name: Build Windows Installer

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }
          pip install pyinstaller pillow

      - name: Build Windows EXE (auto skip bad icon)
        shell: pwsh
        run: |
          Write-Host "üèó Starting Windows build..."

          $iconValid = $false
          if (Test-Path "icon.ico") {
            try {
              $result = python -c "from PIL import Image; 
try:
    with Image.open('icon.ico') as im:
        im.verify()
    print('ICON_OK')
except Exception:
    print('ICON_BAD')"
              if ($result -match "ICON_OK") {
                Write-Host "‚úÖ icon.ico is valid"
                $iconValid = $true
              } else {
                Write-Host "‚ö†Ô∏è icon.ico failed validation ‚Äî skipping"
              }
            } catch {
              Write-Host "‚ö†Ô∏è Exception while checking icon.ico ‚Äî skipping"
            }
          } else {
            Write-Host "‚ö†Ô∏è icon.ico not found ‚Äî skipping"
          }

          if ($iconValid) {
            Write-Host "Building with icon..."
            pyinstaller --noconfirm --onefile --windowed --icon=icon.ico main.py
            if ($LASTEXITCODE -ne 0) {
              Write-Host "‚ö†Ô∏è Build failed with icon. Retrying without icon..."
              pyinstaller --noconfirm --onefile --windowed main.py
            }
          } else {
            Write-Host "Building without icon..."
            pyinstaller --noconfirm --onefile --windowed main.py
          }

      - name: Rename EXE with commit hash
        shell: pwsh
        run: |
          $commit = (git rev-parse --short HEAD)
          $exePath = Get-ChildItem -Path dist -Filter *.exe | Select-Object -First 1
          if ($exePath) {
            $newName = [System.IO.Path]::Combine($exePath.DirectoryName, "SimukaUpenye-DeliveryNote_$commit.exe")
            Rename-Item -Path $exePath.FullName -NewName $newName
            Write-Host "‚úÖ Renamed EXE to: $newName"
          } else {
            Write-Host "‚ùå No EXE found to rename."
          }

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: DeliveryNoteInstaller
          path: dist/*.exe
