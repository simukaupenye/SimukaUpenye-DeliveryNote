name: Build Windows Installer

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }

      # 4. Check icon validity
      - name: Check icon validity
        shell: pwsh
        run: |
          Write-Host "Checking icon validity..."
          try {
            @'
from PIL import Image
try:
    with Image.open("icon.ico") as im:
        im.verify()
    print("ICON_OK")
except Exception as e:
    print("ICON_BAD:", e)
'@ | python -
          } catch {
            Write-Host "ICON_CHECK_FAILED"
          }

      # 5. Build executable with PyInstaller
      - name: Build executable with PyInstaller
        shell: pwsh
        run: |
          if (Test-Path "icon.ico") {
            pyinstaller --noconfirm --onefile --windowed --icon "icon.ico" main.py
          } else {
            pyinstaller --noconfirm --onefile --windowed main.py
          }

      # 6. Rename EXE with commit hash
      - name: Rename EXE with commit hash
        shell: pwsh
        run: |
          $commit = (git rev-parse --short HEAD)
          $exePath = "dist/main.exe"
          if (Test-Path $exePath) {
            Rename-Item $exePath ("dist/MyApp-" + $commit + ".exe")
          }

      # 7. Upload the EXE as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-EXE
          path: dist/*.exe
