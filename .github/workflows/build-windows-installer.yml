name: Build Windows Installer

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build EXE on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }

      - name: Validate icon (skip on error)
        shell: pwsh
        run: |
          Write-Host "üîç Checking icon.ico validity..."
          try {
            python - <<'PYCODE'
import sys
from PIL import Image

try:
    with Image.open("icon.ico") as im:
        im.verify()
    print("‚úÖ icon.ico is valid")
except Exception as e:
    print(f"‚ö†Ô∏è icon.ico validation failed, continuing anyway: {e}")
PYCODE
          } catch {
            Write-Host "‚ö†Ô∏è Python validation failed, continuing anyway..."
          }

      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          Write-Host "üöÄ Starting Windows build..."
          pyinstaller --onefile --noconsole --icon "icon.ico" main.py

      - name: Rename EXE with commit hash
        shell: pwsh
        run: |
          $commit = (git rev-parse --short HEAD)
          $exePath = "dist/main.exe"
          if (Test-Path $exePath) {
            $newName = "dist/SimukaUpenye-DeliveryNote-$commit.exe"
            Rename-Item -Path $exePath -NewName $newName
            Write-Host "‚úÖ Renamed EXE to $newName"
          } else {
            Write-Host "‚ö†Ô∏è EXE not found to rename."
          }

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-EXE
          path: dist/*.exe
